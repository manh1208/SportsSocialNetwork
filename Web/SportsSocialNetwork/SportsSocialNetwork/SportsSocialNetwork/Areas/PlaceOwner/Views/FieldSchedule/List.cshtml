@using SportsSocialNetwork.Models.Enumerable;
@using SportsSocialNetwork.Models.Utilities;
@{
    ViewBag.Title = "Quản lí lịch đặt sân";
    int placeID = ViewBag.placeID;
}
<style>
    .datepicker.datepicker-dropdown.dropdown-menu.datepicker-oritent-left.dataTable-orient-bottom {
        top: 43%;
    }

    .timepicker {
        z-index: 5000 !important;
    }

    .narrow {
        padding: 5px;
        border: 1px solid;
        width: 8em;
    }

    .breakAll {
        word-break: break-all;
    }


    dt, dd {
        font-size: 15px;
        color: #000;
    }

    dt {
        font-weight: bold;
    }

    .button {
        background-color: #008CBA; /* blue */
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
    }

    #sport-table {
        word-wrap: break-word;
    }

    /*p.alignCenter {
        text-align: center;
    }*/
</style>

<div class="panel">
    <div class="panel-body">
        <div class="col-md-6">
            <h3>Danh sách các lịch đặt sân</h3>
        </div>
        <div class="col-md-6 text-right">
            <a class="btn btn-success" onclick="showCreateModal()" href="javascript:void(0)">Thêm lịch đặt sân</a>
        </div>
    </div>
</div>

<div class="panel">
    <div class="panel-body">
        <div class="box">
            <div class="box-header">
            </div><!-- /.box-header -->
            <div class="box-body">
                <div class="row">
                    <div class="col-sm-12">
                        <table id="fieldschedule-table" class="table table-hover dataTable table-bordered dt-responsive nowrap" cellspacing="0">
                            <thead>
                                <tr>
                                    <th class="breakAll narrow">Số thứ tự</th>
                                    <th class="breakAll narrow">Tên sân</th>
                                    <th class="breakAll narrow">Thời gian bắt đầu</th>
                                    <th class="breakAll narrow">Thời gian kết thúc</th>
                                    <th class="breakAll narrow">Loại</th>
                                    <th class="breakAll narrow">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div><!-- /.box-body -->
        </div>
    </div>
</div>

<div class="modal fade modal-warning" id="modelDetail" aria-hidden="true"
     aria-labelledby="modelDetail" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="detail-modal-container"></div>
        </div>
    </div>
</div>

<div class="modal fade modal-warning" id="modalCreate" aria-hidden="true"
     aria-labelledby="modalCreate" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="create-modal-container"></div>
        </div>
    </div>
</div>


<div class="modal fade modal-warning" id="modalUpdate" aria-hidden="true"
     aria-labelledby="modalViewdetail" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="update-modal-container"></div>
        </div>
    </div>
</div>


@section scripts{
    <script>
        (function (document, window, $) {
            'use strict';

            var Site = window.Site;
            $(document).ready(function () {
                Site.run();
                $('#startDay').datepicker({
                    format: "dd/mm/yyyy"
                })
                $('#endDay').datepicker({
                    format: "dd/mm/yyyy"
                })
            });
        })(document, window, jQuery);

        //load init datatable function
        $(document).ready(function () {
            initEventTable();
        });

        //init datatable
        function initEventTable() {
            var colDefs = [
                  {
                      "aTargets": [1, 2, 3],
                      "bSortable": false,
                  },

                  {
                      "aTargets": [4],
                      "mRender": function (data, type, row) {
                          var label = '';
                          if (row[4] == parseInt('@((int)FieldScheduleStatus.Repair)')) {
                              label = '<span class="label label-outline label-success label-lg">@Utils.GetEnumDescription(FieldScheduleStatus.Repair).ToString()</span>';
                          } else if (row[4] == parseInt('@((int)FieldScheduleStatus.Booked)')) {
                              label = '<span class="label label-outline label-danger label-lg">@Utils.GetEnumDescription(FieldScheduleStatus.Booked)</span>';
                          } else if (row[4] == parseInt('@((int)FieldScheduleStatus.Event)')) {
                              label = '<span class="label label-outline label-warning label-lg">@Utils.GetEnumDescription(FieldScheduleStatus.Event)</span>';
                          } else if (row[4] == parseInt('@((int)FieldScheduleStatus.Other)')) {
                              label = '<span class="label label-outline label-primary label-lg">@Utils.GetEnumDescription(FieldScheduleStatus.Other)</span>';
                          } else {
                              label = '<span class="label label-outline label-default label-lg">Chưa có</span>';
                          }

                          return label;
                      },
                      "bSortable": false,
                  },

                  {
                      "aTargets": [5],
                      "mRender": function (data, type, row) {
                          //var previewBtn = '<a class="btn btn-success" data-target="#modalViewdetail" onclick="showDetailModal(\'' + row[2] + '\')" data-toggle="modal" href="#"><i class="fa fa-eye"></i></a>';
                          var previewBtn = '<a class="btn btn-success" data-target="#modalViewdetail" onclick="showDetailModal(\'' + data + '\')" data-toggle="modal" href="#"><i class="fa fa-eye"></i></a>';
                          var updateBtn = '<a class="btn btn-warning" data-target="#modalUpdate" data-toggle="modal" onclick="showUpdateModal(\'' + data + '\')" href="#"><i class="fa fa-pencil-square-o"></i></a>';
                          var deactiveBtn = '<a class="btn btn-danger" data-style="zoom-in" data-plugin="ladda" onclick="deactiveSchedule(\'' + data + '\')"  href="#"> <span class="ladda-label"><i class="fa fa-trash-o "></i></span></a>';
                          return previewBtn + '&nbsp;' + updateBtn + '&nbsp;' + deactiveBtn;
                      },
                      "bSortable": false
                  },
            ];
            var param = {
                colDefs: colDefs,
                url: '@Url.Action("IndexList")',
                data: [{
                    name: "placeID", value: '@placeID'
                }]
            };
            $('#fieldschedule-table').customDataTable(param);

        };

        //show detail popup
        function showDetailModal(id) {
            $.ajax({
                url: '@Url.Action("Detail")',
                type: 'Get',
                data: { id: id },
                success: function (data) {
                    $('#detail-modal-container').html(data);
                    $('#modelDetail').modal('show');
                },
                error: function (error) {
                    showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        };
        //show sport create popup
        function showCreateModal() {
            $.ajax({
                url: '@Url.Action("Create")',
                type: 'Get',
                data: { placeId: @placeID},
                //dataType: "html",
                //luc khoi tao 1 sport moi thi ko có id
                success: function (data) {
                    $('#create-modal-container').html(data);
                    $('#modalCreate').modal('show');
                    scriptForPartialView();//de thuc hien java script goi controller xu ly thao tac create
                },
                error: function (error) {
                    showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        };


        //show sport update popup
        function showUpdateModal(id) {
            $.ajax({
                url: '@Url.Action("Update")',
                type: 'Get',
                data: { id: id, placeId: @placeID },
                success: function (data) {
                    $('#update-modal-container').html(data);
                    $('#modalUpdate').modal('show');
                    scriptUpdatePartial();
                },
                error: function (error) {
                    showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        };

        //this function will change the status from active to deactive
        function deactiveSchedule(id) {
            showConfirmDeleteItem("Bạn có chắc chắn muốn xóa lịch đặt này không?",
                function (isConfirm) {
                    if (isConfirm) {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("Deactive")',
                            data: { id: id },
                            success: function (data) {
                                $("#fieldschedule-table").reloadDataTable();
                                if (data.Succeed) {
                                    showMessage("Xóa thành công", "success", "OK");
                                } else {
                                    showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                                }
                            },
                            error: function (error) {
                                showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                            }
                        });
                    }
                });
        };
        function scriptUpdatePartial() {
            (function (document, window, $) {
                'use strict';

                var Site = window.Site;
                $(document).ready(function () {
                    Site.run();
                });
            })(document, window, jQuery);

            $('#startDay').datepicker({
                format: "dd/mm/yyyy"
            });
            $('#endDay').datepicker({
                format: "dd/mm/yyyy"
            });

            $(document).on('change', "#startDay", function () {
                $('#update-form').formValidation('revalidateField', 'StartDay');
            });
            $(document).on('change', "#endDay", function () {
                $('#update-form').formValidation('revalidateField', 'EndDay');
            });

            $(document).on('change', "#startTime", function () {
                $('#update-form').formValidation('revalidateField', 'StartTime');
            });
            $(document).on('change', "#endTime", function () {
                $('#update-form').formValidation('revalidateField', 'EndTime');
            });

            $("#startTime").on("change", function () {
                $('#update-form').formValidation('revalidateField', 'StartTime')
            });

            $("#endTime").on("change", function () {
                $('#update-form').formValidation('revalidateField', 'EndTime')
            });

            var stD = $("#startDay").val();

            (function () {
                var TIME_PATTERN = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;
                $('#update-form').formValidation({
                    framework: "bootstrap",
                    button: {
                        selector: '#submitBtn',
                        disabled: 'disabled'
                    },
                    icon: null,
                    fields: {
                        StartDay: {
                            validators: {
                                notEmpty: {
                                    message: 'Ngày bắt đầu không được trống'
                                },
                                date: {
                                    format: 'DD/MM/YYYY',
                                    message: 'Ngày không phù hợp',
                                    min: stD,
                                    max: 'EndDay'
                                }
                            }
                        },
                        EndDay: {
                            validators: {
                                notEmpty: {
                                    message: 'Ngày kết thúc không được trống'
                                },
                                date: {
                                    format: 'DD/MM/YYYY',
                                    message: 'Ngày không phù hợp',
                                    min: 'StartDay'
                                }
                            }
                        },
                        StartTime: {
                            validators: {
                                notEmpty: {
                                    message: 'Giờ bắt đầu không được trống'
                                },
                                regexp: {
                                    regexp: TIME_PATTERN,
                                    message: 'Giờ không đúng định dạng [HH:mm]'
                                },
                            }
                        },
                        EndTime: {
                            validators: {
                                notEmpty: {
                                    message: 'Giờ bắt đầu không được trống'
                                },
                                regexp: {
                                    regexp: TIME_PATTERN,
                                    message: 'Giờ không đúng định dạng [HH:mm]'
                                },
                            }
                        },
                        Description: {
                            validators: {
                                notEmpty: {
                                    message: 'Mô tả không được trống'
                                }
                            }
                        }
                    }
                });
            })();

            //update sport function
            $('#update-form').submit(function (e) {
                e.preventDefault();
                var formData = new FormData(document.getElementById('update-form'));
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Update")',
                    data: formData,
                    async: false,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (result) {
                        if (result.Succeed) {
                            showMessage("Cập nhật thành công.", "success", "OK");
                            $('#modalUpdate').modal('hide');
                            $('#fieldschedule-table').reloadDataTable();
                        } else {
                            showErrors(result.Errors);
                            showMessage("Không thể cập nhật.", "error", "OK");

                        }
                    },
                    error: function (result) {
                        showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                        $('#modalUpdate').modal('hide');
                    },
                });
            });

            $('body').on('focus', ".timepicker", function () {
                $(this).clockpicker();
            })
            $('body').on('focus', ".datepicker", function () {
                $(this).datepicker();
            })
        };

        //function nay de goi controller thuc hien cac thao tac xu ly update, create
        function scriptForPartialView() {
            (function (document, window, $) {
                'use strict';

                var Site = window.Site;
                $(document).ready(function () {
                    Site.run();
                });
            })(document, window, jQuery);

            $('#cstartDay').datepicker({
                format: "dd/mm/yyyy"
            });
            $('#cendDay').datepicker({
                format: "dd/mm/yyyy"
            });

            $(document).on('change', "#cstartDay", function () {
                $('#create-form').formValidation('revalidateField', 'StartDay');
            });
            $(document).on('change', "#cendDay", function () {
                $('#create-form').formValidation('revalidateField', 'EndDay');
            });

            $(document).on('change', "#cstartTime", function () {
                $('#create-form').formValidation('revalidateField', 'StartTime');
            });
            $(document).on('change', "#cendTime", function () {
                $('#create-form').formValidation('revalidateField', 'EndTime');
            });

            $("#cstartTime").on("change", function () {
                $('#create-form').formValidation('revalidateField', 'StartTime')
            });

            $("#cendTime").on("change", function () {
                $('#create-form').formValidation('revalidateField', 'EndTime')
            });

            //Validation
            (function () {
                var TIME_PATTERN = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;
                $('#create-form').formValidation({
                    framework: "bootstrap",
                    button: {
                        selector: '#csubmitBtn',
                        disabled: 'disabled'
                    },
                    icon: null,
                    fields: {
                        FieldId: {
                            validators: {
                                notEmpty: {
                                    message: 'Tên sự kiện không được trống'
                                }
                            }
                        },
                        PlaceId: {
                            validators: {
                                notEmpty: {
                                    message: 'Địa điểm không được trống'
                                }
                            }
                        },
                        StartDay: {
                            validators: {
                                notEmpty: {
                                    message: 'Ngày bắt đầu không được trống'
                                },
                                date: {
                                    format: 'DD/MM/YYYY',
                                    message: 'Ngày không phù hợp',
                                    min: '@DateTime.Now.ToString("dd/MM/yyyy")',
                                    max: 'EndDay'
                                }
                            }
                        },
                        EndDay: {
                            validators: {
                                notEmpty: {
                                    message: 'Ngày kết thúc không được trống'
                                },
                                date: {
                                    format: 'DD/MM/YYYY',
                                    message: 'Ngày không phù hợp',
                                    min: 'StartDay'
                                }
                            }
                        },
                        StartTime: {
                            validators: {
                                notEmpty: {
                                    message: 'Giờ bắt đầu không được trống'
                                },
                                regexp: {
                                    regexp: TIME_PATTERN,
                                    message: 'Giờ không đúng định dạng [HH:mm]'
                                },
                            }
                        },
                        EndTime: {
                            validators: {
                                notEmpty: {
                                    message: 'Giờ bắt đầu không được trống'
                                },
                                regexp: {
                                    regexp: TIME_PATTERN,
                                    message: 'Giờ không đúng định dạng [HH:mm]'
                                },
                            }
                        },
                        Description: {
                            validators: {
                                notEmpty: {
                                    message: 'Mô tả không được trống'
                                }
                            }
                        }
                    }
                });
            })();


            //create sport
            @*$('#create-form').submit(function (e) {
                e.preventDefault();
                var formData = new FormData(document.getElementById('create-form'));
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Create")',
                    data: formData,
                    async: false,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (result) {
                        if (result.Succeed) {
                            showMessage("Thêm mới thành công.", "success", "OK");
                            $('#modalCreate').modal('hide');
                            $('#fieldschedule-table').reloadDataTable();
                        } else {
                            showErrors(result.Errors);
                            showMessage("Không tạo được. Vui lòng nhập lại", "error", "OK");
                        }

                    },
                    error: function (result) {

                        showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                    },
                });
            });*@

            $('body').on('focus', ".timepicker", function () {
                $(this).clockpicker();
            })
            $('body').on('focus', ".datepicker", function () {
                $(this).datepicker();
            })

        };

        $('body').on('focus', ".timepicker", function () {
            $(this).clockpicker();
        })
        $('body').on('focus', ".datepicker", function () {
            $(this).datepicker();
        })
    </script>
}

