@using SportsSocialNetwork.Models.Enumerable;
@using SportsSocialNetwork.Models.Utilities;
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Danh sách các địa điểm";
}

<div class="panel">
    <div class="panel-body">
        <div class="col-md-6">
            <h3>Danh sách các địa điểm</h3>
        </div>
        <div class="col-md-6" style="text-align:right;">
            <a href="/PlaceOwner/Place/CreatePlace" class="btn btn-success"><i class="fa fa-plus" aria-hidden="true"></i> Tạo mới địa điểm</a>
        </div>
    </div>
</div>
<div class="panel">
    <div class="panel-body">
        <table class="table table-striped table-bordered table-hover" id="listPlaceTable">
            <thead>
                <tr>
                    <th>Tên địa điểm</th>
                    <th>Địa chỉ</th>
                    <th>Trạng thái</th>
                    <th>Thao tác</th>
                    @*<th><a href="" class="btn btn-info"><i class="icon wb-pencil" aria-hidden="true"></i>Chi tiết</a></th>*@
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="modalPlaceDetail" aria-hidden="true"
     aria-labelledby="modalPlaceDetail" role="dialog" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div id="place-detail-modal-container"></div>
        </div>
    </div>
</div>

@section Scripts{

<script>
    (function (document, window, $) {
        'use strict';

        var Site = window.Site;
        $(document).ready(function () {
            Site.run();
        });
    })(document, window, jQuery);

    function RefreshTable() {
        var oTable = $("#listPlaceTable").dataTable();
        oTable._fnPageChange(0);
        oTable._fnAjaxUpdate();
    };

    function showDetail(id) {
        $.ajax({
            url: '@Url.Action("ModalDetail")',
            type: 'Get',
            data: { id: id },
            success: function (data) {
                $('#place-detail-modal-container').html(data);
                $('#modalPlaceDetail').modal('show');
            },
            error: function (error) {
                showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
            }
        });
    };

    function deletePlace(id) {
        showConfirmDeleteItem("Bạn có chắc chắn muốn xóa địa điểm này không?",
            function (isConfirm) {
                if (isConfirm) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("deletePlace")',
                        data: { id: id },
                        success: function (data) {
                            if (data === "success") {
                                RefreshTable();
                                showMessage("Xóa địa điểm thành công", "success", "OK");
                            }
                            else {
                                showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                            }
                        },
                        error: function (error) {
                            showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                        }
                    });
                }
            });
    }

    //function deletePlace(id) {
    //    bootbox.dialog({
    //        message: "Bạn có chắc muốn xóa địa điểm này?",
    //        title: "Xác nhận xóa",
    //        buttons: {
    //            success: {
    //                label: "Hủy",
    //                className: "btn-default",
    //                callback: function () {

    //                }
    //            },
    //            danger: {
    //                label: "Đồng ý",
    //                className: "btn-danger",
    //                callback: function () {
    //                    $.ajax({
    //                        url: "/PlaceOwner/Place/deletePlace",
    //                        data: {
    //                            format: 'json',
    //                            id: id
    //                        },
    //                        error: function () {
    //                            showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
    //                        },
    //                        success: function (data) {
    //                            if (data === "success") {
    //                                bootbox.alert("Đã xóa thành công", function () {
    //                                    location.href = "/PlaceOwner/Place";
    //                                });

    //                            }
    //                        },
    //                        type: 'POST'
    //                    })
    //                }
    //            }
    //        }
    //    });
    //}

    function InitDatatable() {
        $("#listPlaceTable").DataTable({
            "bRetrieve": true,
            "bServerSide": true,
            "bScrollCollapse": true,
            "bSort": true,
            "sAjaxSource": "/PlaceOwner/Place/GetData",
            "bProcessing": true,
            "fnServerParams": function (aoData) {
                aoData.push({ "name": "userID", "value": '@User.Identity.GetUserId()' })
            },
            "aLengthMenu": [10, 20, 50],
            "oLanguage": {
                "sSearch": "Tìm kiếm:",
                "sZeroRecords": "Không có dữ liệu phù hợp",
                "sInfo": "Hiển thị từ _START_ đến _END_ trên tổng số _TOTAL_ dòng",
                "sEmptyTable": "Không có dữ liệu",
                "sInfoFiltered": " - lọc ra từ _MAX_ dòng",
                "sLengthMenu": "Hiển thị _MENU_ dòng",
                "sProcessing": "Đang xử lý...",
                "oPaginate": {
                    "sPrevious": "Trang trước",
                    "sNext": "Trang kế"
                }
            },

            @*"fnDrawCallback": function (settings) {
                $(':checkbox').change(function () {
                    if ($(this).prop('checked') == true) {
                        $.ajax({
                            url: "/BlogPostManage/@ViewBag.storeId/@ViewBag.storeName/BlogPost/ChangeStatus",
                            type: 'POST',
                            data: {
                                'blogPostId': $(this).val(),
                                'status': 'Activate'
                            },
                            dataType: 'json',
                            success: function (result) {
                                ReDrawDatatable("listBlogPostTable");
                            }
                        });
                    } else {
                        $.ajax({
                            url: "/BlogPostManage/@ViewBag.storeId/@ViewBag.storeName/BlogPost/ChangeStatus",
                            type: 'POST',
                            data: {
                                'blogPostId': $(this).val(),
                                'status': 'Deactivate'
                            },
                            dataType: 'json',
                            success: function (result) {
                                ReDrawDatatable("listBlogPostTable");
                            }
                        });
                    }
                });
            },*@
            "aoColumnDefs": [
                {
                    "aTargets": [0],
                    "mRender": function (data, type, o) {
                        return o[1];
                    }
                },
                {
                    "aTargets": [1],
                    "width": "50%",
                    "mRender": function (data, type, o) {
                        return o[3] + ", " + o[4] + ", " + o[5] + ", " + o[6];
                    }
                },
                {
                    "aTargets": [2],
                    //"bSortable": false,
                    "mRender": function (data, type, o) {
                        var label = '';
                        if (o[2] == parseInt('@((int)PlaceStatus.Active)')) {
                            label = "<span class='label label-lg label-outline label-success'>@Utils.GetEnumDescription(PlaceStatus.Active).ToString()</span>";
                        } else if (o[2] == parseInt('@((int)PlaceStatus.Pending)')) {
                            label = "<span class='label label-lg label-outline label-warning'>@Utils.GetEnumDescription(PlaceStatus.Pending).ToString()</span>"
                        } else if (o[2] == parseInt('@((int)PlaceStatus.Unapproved)')) {
                            label = "<span class='label label-lg label-outline label-dark'>@Utils.GetEnumDescription(PlaceStatus.Unapproved).ToString()</span>"
                        } else if (o[2] == parseInt('@((int)PlaceStatus.Repairing)')) {
                            label = "<span class='label label-lg label-outline label-danger'>@Utils.GetEnumDescription(PlaceStatus.Repairing).ToString()</span>"
                        } else {
                            label = '<span class="label label-outline label-default label-lg">Không xác định</span>';
                        }
                        return label;
                    }
                },
                {
                    "aTargets": [3],
                    "bSortable": false,
                    "width": "22%",
                    "mRender": function (data, type, o) {
                        var viewDetailBtn = "<a href='javascript:void(0)' class='btn btn-success' data-target='#modalPlaceDetail' data-toggle='modal' onclick='showDetail("+ o[0] +")'><i class='fa fa-eye' aria-hidden='true'></i></a>";
                        var updateBtn = "<a href='/PlaceOwner/Place/PlaceDetail/" + o[0] + "' class='btn btn-warning'><i class='fa fa-pencil-square-o' aria-hidden='true'></i></a>";
                        var deleteBtn = "<a href='javascript:void(0)' class='btn btn-danger' onclick='deletePlace(" + o[0] + ")'><i class='fa fa-trash-o ' aria-hidden='true'></i></a>";
                        var viewFieldBtn = "<a href='/PlaceOwner/Field/FieldList/" + o[0] + "' class='btn btn-info'><i class='icon wb-map' aria-hidden='true'></i></a>";
                        return viewDetailBtn + '&nbsp;' + updateBtn + '&nbsp' + viewFieldBtn;
                    }
                }

            ],

        });
    };

    $(document).ready(function () {
        InitDatatable();
        RefreshTable();
        //loadlist();
    });

</script>

    }

