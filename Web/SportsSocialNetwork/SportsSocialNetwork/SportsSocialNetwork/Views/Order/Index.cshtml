@model SportsSocialNetwork.Models.ViewModels.OrderViewModel
@using SportsSocialNetwork.Models.Enumerable
@using SportsSocialNetwork.Models.Utilities
@using SportsSocialNetwork.Models.ViewModels;
@using Microsoft.AspNet.Identity;
@using SportsSocialNetwork.Models.Entities;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_BookingFieldLayout.cshtml";

    var sport = ViewBag.Sport as IEnumerable<SelectListItem>;
}
<style>
    .pagination{
        font-size:14px
    }
    .pagination>.active>a, .pagination>.active>a:focus, 
    .pagination>.active>a:hover, .pagination>.active>span, 
    .pagination>.active>span:focus, .pagination>.active>span:hover{
        background-color:black;
        border-color:black;
        border-radius:5px
    }
    .pagination>li>a, .pagination>li>span{
        background-color:#76838f;
        border-color:#76838f;
        color:black;
        border-radius:5px
    }
    .pagination>li:last-child>a, .pagination>li:last-child>span{
        background-color:white;
        border-radius:5px
    }
    .pagination>li:first-child>a, .pagination>li:first-child>span{
        background-color:white;
        border-radius:5px
    }
    .dataTables_wrapper .dataTables_paginate .paginate_button:hover{
     color: transparent;
     background-color: transparent;
     background-image: unset;
     border: none;
    }
    #DataTables_Table_0>thead>tr>th{
        font-weight:bold;
    }

    .select2-dropdown {
        z-index: 99999;
    }

    .select2-selection {
        border-radius: 0px !important;
    }

    .select2-selection__choice {
        color: #fff !important;
        background-color: #ff6a00 !important;
    }

    .select2-selection__choice__remove {
        color: #fff !important;
    }
</style>
<div class="panel">
    <div class="panel-body">
        <h2><i class="fa fa-bars" aria-hidden="true"></i> Lịch sử đặt sân</h2>
    </div>
</div>
<div class="panel padding-top-20">
    <div class="panel-body">
        <table class="table table-striped table-bordered table-hover" id="DataTables_Table_0">
            <thead>
                <tr style="color:black">
                    <th>Mã đặt sân</th>
                    <th>Tên sân</th>
                    <th>Thời gian đặt</th>
                    <th>Thời gian sử dụng</th>
                    <th></th>
                    <th></th>
                    <th>Hình thức thanh toán</th>
                    <th>Trạng thái</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody style="color:black"></tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="orderDetail" aria-hidden="true"
     aria-labelledby="orderDetail" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="order-detail-modal-container"></div>
        </div>
    </div>
</div>


<!--Share modal-->
<div id="shareModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <form id="shareForm" method="post" class="form-horizontal" autocomplete="off">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Chia sẻ bài viết</h4>
                </div>
                <div class="modal-body">
                    <h3>Chia sẻ bài viết này lên: </h3>
                    <input type="hidden" name="userId" value="@User.Identity.GetUserId()" />
                    <input type="hidden" name="shareType" id="shareType" value="" />
                    <input type="hidden" name="dataId" id="dataId" value="" />
                    <input type="radio" name="receiver" id="senderWall" value="@((int)SharedReceiver.SenderWall)" checked> Tường nhà bạn<br>
                    <input type="radio" name="receiver" id="frdWall" value="@((int)SharedReceiver.FriendWall)"> Tường nhà của người mà bạn theo dõi
                    <select id="frdSelectShare" name="frdSelectShare" class="form-control" disabled>
                        <option value="-1">Chọn một bạn</option>
                        @{
                            if (ViewBag.followingList != null && ViewBag.followingList.Count > 0)
                            {
                                foreach (var item in ViewBag.followingList as List<FollowDetailViewModel>)
                                {
                                    <option value="@item.UserId">@item.User.FullName</option>
                                }
                            }

                        }
                    </select>
                    <br>
                    <input type="radio" name="receiver" id="groupWall" value="@((int)SharedReceiver.Group)"> Nhóm
                    <select id="groupSelectShare" name="groupSelectShare" class="form-control" disabled>
                        <option value="-1">Chọn một nhóm</option>
                        @{
                            if (ViewBag.GroupList != null && ViewBag.GroupList.Count > 0)
                            {
                                foreach (var item in ViewBag.GroupList as List<Group>)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            }

                        }
                    </select>
                    <br />
                    <h3>Nội dung bài viết</h3>
                    <textarea name="shareContent" id="shareContent" class="form-control" placeholder="Viết gì đó cho chia sẻ này"></textarea>
                    <input id="sportSelectShare" type="text" name="sportSelectShare"
                           placeholder="Tags" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
                    <input type="submit" class="btn btn-default" value="Chia sẻ" />
                </div>
            </form>
        </div>

    </div>
</div>



@section Scripts{
    <script src="~/Content/js/post-script.js"></script>
    <script>
        (function (document, window, $) {
            'use strict';

            var Site = window.Site;
            $(document).ready(function () {
                Site.run();
            });
        })(document, window, jQuery);


        var array = @Html.Raw(Json.Encode(
         ((IEnumerable<SelectListItem>)sport).Select(m => new
         {
             id = m.Value,
             text = m.Text
         })
        ));

        $('#sportSelectShare').select2({
            class: 'form-control',
            width: '100%',
            multiple: true,
            maximumSelectionSize: 1,
            placeholder: "Chọn môn thể thao của bài viết",
            data: array
        });


        function CancelOrder(id)
        {
            $.ajax({
                url: '@Url.Action("CancelOrder")',
                type: 'Get',
                data: {
                    id: id
                },
                success: function (data) {
                    if (data === "success") {
                        showMessage("Hủy đặt sân thành công.", "success", "OK");
                        RefreshTable();
                        $('#orderDetail').modal('hide');
                    } else {
                        showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                    }
                },
                error: function (error) {
                    showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        }

        function showDetailModal(id) {
            $.ajax({
                url: '@Url.Action("OrderDetail")',
                type: 'Get',
                data: { id: id },
                success: function (data) {
                    $('#order-detail-modal-container').html(data);
                    $('#orderDetail').modal('show');
                },
                error: function (error) {
                    showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                }
            });
        }

        function RefreshTable() {
            var oTable = $("#DataTables_Table_0").dataTable();
            oTable._fnPageChange(0);
            oTable._fnAjaxUpdate();
        };

        function InitDatatable() {
            $("#DataTables_Table_0").DataTable({
                "bRetrieve": true,
                "bServerSide": true,
                "bScrollCollapse": true,
                "bSort": true,
                "sAjaxSource": "/Order/GetData",
                "bProcessing": true,
                "aLengthMenu": [10, 20, 50],
                "oLanguage": {
                    "sSearch": "Tìm kiếm:",
                    "sZeroRecords": "Không có kết quả phù hợp",
                    "sInfo": "Hiển thị _START_ - _END_ trong số _TOTAL_ dòng",
                    "sEmptyTable": "Không tìm thấy kết quả nào",
                    "sInfoFiltered": "",
                    "sLengthMenu": "Hiển thị _MENU_ dòng",
                    "sProcessing": "Xin đợi trong giây lát...",
                    "oPaginate": {
                        "sFirst": "Về đầu",
                        "sLast": "Về cuối",
                        "sNext": "Trang kế >",
                        "sPrevious": "< Trang trước"
                    },
                },
                "aoColumnDefs": [
                    {
                        "aTargets": [0],
                        "mRender": function (data, type, o) {
                            return o[1];
                        }
                    },
                    {
                        "aTargets": [1],
                        "mRender": function (data, type, o) {
                            return o[2];
                        }
                    },
                    {
                        "aTargets": [2],
                        "mRender": function (data, type, o) {
                            return o[3];
                        }
                    },
                    {
                        "aTargets": [3],
                        "mRender": function (data, type, o) {
                            return o[4] +' - '+ o[6]+', Ngày '+ o[5];
                        }
                    },
                    {
                        "aTargets": [4, 5],
                        "bVisible": false
                    },
                    {
                        "aTargets": [6],
                        "mRender": function (data, type, o) {
                            if (o[7] == parseInt('@((int)OrderPaidType.ChosePayOnline)')) {
                                return "<span class='label label-lg label-outline label-dark'>@Utils.GetEnumDescription(OrderPaidType.ChosePayOnline).ToString()</span>";
                            } else if (o[7] == parseInt('@((int)OrderPaidType.ChosePayByCash)')) {
                                return "<span class='label label-lg label-outline label-dark'>@Utils.GetEnumDescription(OrderPaidType.ChosePayByCash).ToString()</span>";
                            } else if (o[7] == parseInt('@((int)OrderPaidType.PaidByCash)')) {
                                return "<span class='label label-lg label-outline label-success'>@Utils.GetEnumDescription(OrderPaidType.PaidByCash).ToString()</span>";
                            } else if (o[7] == parseInt('@((int)OrderPaidType.PaidOnline)')) {
                                return "<span class='label label-lg label-outline label-primary'>@Utils.GetEnumDescription(OrderPaidType.PaidOnline).ToString()</span>";
                            } else {
                                return "<span class='label label-lg label-outline label-dark'>Không xác định</span>";
                            }
                        }
                    },
                    {
                        "aTargets": [7],
                        "mRender": function (data, type, o) {
                            if (o[8] == parseInt('@((int)OrderStatus.Pending)')) {
                                return "<span class='label label-lg label-outline label-warning'>@Utils.GetEnumDescription(OrderStatus.Pending).ToString()</span>";
                            } else if (o[8] == parseInt('@((int)OrderStatus.Approved)')) {
                                return "<span class='label label-lg label-outline label-success'>@Utils.GetEnumDescription(OrderStatus.Approved).ToString()</span>";
                            } else if (o[8] == parseInt('@((int)OrderStatus.Unapproved)')) {
                                return "<span class='label label-lg label-outline label-danger'>@Utils.GetEnumDescription(OrderStatus.Unapproved).ToString()</span>";
                            } else if (o[8] == parseInt('@((int)OrderStatus.Cancel)')) {
                                return "<span class='label label-lg label-outline label-dark'>@Utils.GetEnumDescription(OrderStatus.Cancel).ToString()</span>";
                            } else if (o[8] == parseInt('@((int)OrderStatus.CheckedIn)')) {
                                return "<span class='label label-lg label-outline label-primary'>@Utils.GetEnumDescription(OrderStatus.CheckedIn).ToString()</span>";
                            } else {
                                return "<span class='label label-lg label-outline label-dark'>Không xác định</span>";
                            }

                        }
                    },
                    {
                        "aTargets": [8],
                        "bSortable": false,
                        "mRender": function (data, type, o) {
                            var detailBtn = "<button class='btn btn-success' onclick='showDetailModal(" + o[0] + ")' data-target='#orderDetail' data-toggle='modal' type='button'><i class='fa fa-eye' aria-hidden='true'></i></button>";
                            var shareBtn = "<button class='btn btn-dark' onclick='showShareModal(" + o[0] + ",7)' type='button'><i class='fa fa-share' aria-hidden='true'></i></button>";
                            return detailBtn + '&nbsp;' + shareBtn;
                        }
                    }

                ],

            });
        };

        $(document).ready(function () {
            InitDatatable();
            RefreshTable();
            //loadlist();
        });

    </script>

}

