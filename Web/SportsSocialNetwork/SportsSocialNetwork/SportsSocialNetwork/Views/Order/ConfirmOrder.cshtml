@model SportsSocialNetwork.Models.ViewModels.OrderViewModel

@{
    ViewBag.Title = "ConfirmOrder";
    Layout = "~/Views/Shared/_BookingFieldLayout.cshtml";
}
<style>
    .imgWH100 {
        width: 100%;
        vertical-align: middle;
        height: 100%;
    }
</style>

<div class="panel padding-top-20 col-md-offset-1 col-md-10">
    <div class="summary-errors alert alert-danger alert-dismissible" style="display: none; text-align:left; padding:0px 0px 0px 10px" id="error">
        <ul>
            <li style="display: none" id="error1">
                <span style="color:red; font-size:12px">Thời gian không nằm trong các khung giờ</span>
            </li>
            <li style="display: none" id="error2">
                <span style="color:red; font-size:12px">Thời gian này sân kín</span>
            </li>
        </ul>
    </div>
    <form id="onlineform" action="@Url.Action("btnSubmit_Click", "Order")" method="get" class="form-horizontal">
        <div class="panel-body container-fluid">
            <div class="col-md-12 form-horizontal">
                @Html.HiddenFor(p => p.FieldId)
                @Html.HiddenFor(p => p.StartTime)
                @Html.HiddenFor(p => p.EndTime)
                @Html.HiddenFor(p => p.Note)
                @Html.HiddenFor(p => p.CreateDate)
                @Html.HiddenFor(p => p.Price)
                @Html.HiddenFor(p => p.UserId)
                <h3 style="text-align:center">Thông tin đặt sân</h3>
                <div class="form-group padding-top-10">
                    <label for="name" class="col-md-4 control-label">Họ Tên:</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(p => p.PayerName, new { @class = "form-control", @id = "name", @Value = @ViewBag.user.FullName })
                    </div>
                </div>
                <div class="form-group">
                    <label for="email" class="col-md-4 control-label">Email:</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(p => p.PayerEmail, new { @class = "form-control", @id = "email", @Value = @ViewBag.user.Email })
                    </div>
                </div>
                <div class="form-group">
                    <label for="phone" class="col-md-4 control-label">Số Điện thoại:</label>
                    <div class="col-md-4">
                        @Html.TextBoxFor(p => p.PayerPhone, new { @class = "form-control", @id = "phone", @Value = @ViewBag.user.PhoneNumber })
                    </div>
                </div>
                <div class="page-invoice-table table-responsive">
                    <table class="table table-hover text-right">
                        <thead>
                            <tr>
                                <th class="text-center">Tên sân</th>
                                <th class="text-center">Thời gian sử dụng</th>
                                <th class="text-right">Thành tiền(vnd)</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="text-center">
                                    @ViewBag.field.Name
                                </td>
                                <td class="text-center">
                                    @Model.StartTime.ToShortTimeString() - @Model.EndTime.ToShortTimeString(), Ngày @Model.StartTime.ToString("dd-MM-yyyy")
                                </td>
                                <td>
                                    @Model.Price
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="col-md-12 padding-0">
                @if (Model.Note != "" && Model.Note != null)
            {
                    <p style="font-weight:bold">
                        Ghi chú:
                    </p>
                    <span class="text-right">@Model.Note</span>
                    <br>
                }
                <p style="font-weight:bold">Phương thức thanh toán:</p>
                <ul class="list-content">
                    <li>
                        <label>
                            @Html.RadioButtonFor(p => p.PaidType, 2, new { @checked = true })
                            Thanh toán bằng tiền mặt tại sân
                        </label>
                    </li>
                    <li>
                        <label>
                            @Html.RadioButtonFor(p => p.PaidType , 1)
                            Thanh toán bằng Ví điện tử NgânLượng
                        </label>
                        <div class="boxContent">
                            <p>
                                Giao dịch. Đăng ký ví NgânLượng.vn  <a href="https://www.nganluong.vn/?portal=nganluong&amp;page=user_register" target="_blank">tại đây</a>
                            </p>
                        </div>
                    </li>
                </ul>
                <div class="form-group col-md-12 text-center">
                    <input type="submit" class="btn btn-primary" id="createOrder" value="Xác nhận">
                    <button type="button" class="btn btn-default btn-outline"
                            onclick="window.history.back();">
                        <span>Quay lại</span>
                    </button>
                </div>

            </div>
        </div>
    </form>    
</div>

@section Scripts{
    <script>
        (function () {
            $('#onlineform').formValidation({
                framework: "bootstrap",
                button: {
                    selector: '#createOrder',
                    disabled: 'disabled'
                },
                icon: null,
                fields: {
                    PayerName: {
                        validators: {
                            notEmpty: {
                                message: 'Không được để trống'
                            }
                        }
                    },
                    PayerEmail: {
                        validators: {
                            notEmpty: {
                                message: 'Email không được trống'
                            },
                            emailAddress: {
                                message: 'Email không đúng định dạng'
                            }
                        }
                    },
                    PayerPhone: {
                        validators: {
                            notEmpty: {
                                message: 'Số điện thoại không được trống'
                            },
                            digits: {
                                message: 'Số điện thoại phải là số'
                            },
                            stringLength: {
                                min: 10,
                                message: 'Số điện thoại phải từ 10 số trở lên'
                            }
                        }
                    }
                }
            });
        })();

        $('input[name="PaidType"]').bind('click', function () {
            $('.list-content li').removeClass('active');
            $(this).parent().parent('li').addClass('active');
        });
        
        $('#onlineform').submit(function () {
            var startTime = $("#StartTime").val();
            var endTime = $("#EndTime").val();
            var playDate = '@Model.StartTime.ToString("dd/MM/yyyy")';
            var error = false;
            $("#error").hide();
            $("#error1").hide();
            $("#error2").hide();
            var hasErrorContent = false;
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CheckTimeValidInTimeBlock")',
                async: false,
                data: {"fieldId" : @Model.FieldId,
                    "startTime": startTime,
                    "endTime" : endTime},
                success: function (result) {
                    if (!result.Succeed) {
                        error = true;
                        hasErrorContent = true;
                        $("#error1").show();
                    }
                },
                error: function (result) {
                    showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                    error = true;
                },
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("CheckOrderTimeExist")',
                async: false,
                data: {"fieldId" : @Model.FieldId,
                    "startTime": startTime,
                    "endTime" : endTime,
                    "playDate" : playDate},
                success: function (result) {
                    if (!result.Succeed) {
                        error = true;
                        hasErrorContent = true;
                        $("#error2").show();
                    }
                },
                error: function (result) {
                    showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                    error = true;
                },
            });

            if (error) {
                if(hasErrorContent){
                    $("#error").show();
                }
                return false;
            }
        });
        @*$("#createOrder").click(function () {
            var paidType = $('[name="option_payment"]:checked').val();
            if(paidType == 0){
                //waiting
            }else{
                $.ajax({
                    url: "CreateOrder",
                    type: 'POST',
                    data: {
                        'fieldId': @Model.FieldId,
                        'startTime': '@Model.StartTime.ToString("hh:mm:ss")',
                        'endTime': '@Model.EndTime.ToString("hh:mm:ss")',
                        'note': '@Model.Note',
                        'price': @Model.Price,
                        'paidType': paidType,
                        'useDate': '@ViewBag.playDate.ToShortDateString()',
                    },
                    dataType: 'json',
                    success: function (result) {
                        $("#createOrder").hide();
                        $("#viewOrderHistory").show();
                        $('.paymentRadio').attr("disabled", true);
                        showMessage("Đặt sân thành công!", "success", "OK");
                    },
                    error: function (error) {
                        showMessage("Có lỗi xảy ra. Vui lòng thử lại sau.", "error", "OK");
                    }
                });
            }
        });*@
    </script>
}