@model SportsSocialNetwork.Models.ViewModels.FieldViewModel

@{
    ViewBag.Title = "FieldDetail";
    Layout = "~/Views/Shared/_BookingFieldLayout.cshtml";
}
<style>
    .imgWH100 {
        width: 100%;
        vertical-align: middle;
        height: 100%;
    }

    .example {
        position: relative;
        padding: 10px;
        border: 1px solid;
    }
</style>
<div class="col-md-6" style="float:left">
    <div class="panel col-md-12">
        <h3 style="text-align:center">@Model.Name</h3>
        <div class="panel-body" style="padding-top:10px">
            <div class="example-wrap">
                @if (ViewBag.fieldImages != null)
                {
                    var count = 0;
                    var imgIndex = 0;
                    <div class="carousel slide" id="exampleCarouselDefault" data-ride="carousel">
                        <ol class="carousel-indicators carousel-indicators-fall">

                            @foreach (var item in ViewBag.fieldImages)
                            {
                                if (count == 0)
                                {
                                    <li class="active" data-slide-to="@count" data-target="#exampleCarouselDefault"></li>
                                    count = count + 1;
                                }
                                else
                                {
                                    <li class="" data-slide-to="@count" data-target="#exampleCarouselDefault"></li>
                                    count = count + 1;
                                }
                            }

                        </ol>
                        <div class="carousel-inner" role="listbox">
                            @foreach (var item in ViewBag.fieldImages)
                            {
                                if (imgIndex == 0)
                                {
                                    <div class="item active" style="height:300px">
                                        <img class="imgWH100" src="@item.Image" alt="..." />
                                    </div>
                                    imgIndex = imgIndex + 1;
                                }
                                else
                                {
                                    <div class="item" style="height:300px">
                                        <img class="imgWH100" src="@item.Image" alt="..." />
                                    </div>
                                    imgIndex = imgIndex + 1;
                                }

                            }
                        </div>
                        <a class="left carousel-control" href="#exampleCarouselDefault" role="button" data-slide="prev">
                            <span class="icon wb-chevron-left" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="right carousel-control" href="#exampleCarouselDefault" role="button"
                           data-slide="next">
                            <span class="icon wb-chevron-right" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>
                    </div>
                }
                else
                {
                    <div class="item" style="height:300px">
                        <img class="imgWH100" src="~/Content/images/no_image.jpg" alt="..." />
                    </div>
                }
                <p>@Model.Description</p>
                <div class="input-daterange">
                    <div class="input-group">
                        <button type="button" class="btn btn-primary col-md-12" id="checkPrice"><i class="fa fa-usd" aria-hidden="true"></i> Bảng giá các khung giờ</button>
                    </div>
                    <div class="input-group">
                        <button type="button" class="btn btn-warning col-md-12" id="checkCalendar"><i class="icon wb-calendar" aria-hidden="true"></i> Kiểm tra lịch sân</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-md-6" style="float:left">
    <div class="panel col-md-12">
        <h3 style="text-align:center">Đặt sân</h3>
        <div class="panel-body">
            <div class="page-content padding-top-0">
                @{Html.RenderAction("_Index", "Order", new { id = Model.Id });}
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="priceForm" aria-hidden="true" role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <form class="modal-content" action="#" method="post" role="form">
            <div class="modal-header">
                <button type="button" class="close" aria-hidden="true" data-dismiss="modal">×</button>
                <h4 class="modal-title">Bảng giá</h4>
            </div>
            <div class="modal-body">
                @if (ViewBag.timeBlocks != null)
                {
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Khung giờ</th>
                                    <th>Giá tiền(vnd)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in ViewBag.timeBlocks)
                                {
                                    <tr>
                                        <td>@item.StartTime - @item.EndTime</td>
                                        <td>@item.Price.ToString("n0")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <span>Hiện tại chưa có bảng giá tham khảo</span>
                }

            </div>
            <div class="modal-footer">
                <div class="form-actions">
                    <button class="btn btn-primary" data-dismiss="modal" type="button">Đóng</button>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="calendarForm" aria-hidden="true" aria-labelledby="CalendarForm"
     role="dialog" tabindex="-1">
    <div class="modal-dialog">
        <form class="modal-content" action="#" method="post" role="form">
            <div class="modal-header">
                <button type="button" class="close" aria-hidden="true" data-dismiss="modal">×</button>
                <h4 class="modal-title">Lịch sân</h4>
            </div>
            <div class="modal-body">
                <div id="calendar">

                </div>
            </div>
            <div class="modal-footer">
                <div class="form-actions">
                    <button class="btn btn-primary" data-dismiss="modal" type="button">Đóng</button>
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts{
    <script>
        (function () {
        var TIME_PATTERN = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;
        $('#orderForm').formValidation({
            framework: "bootstrap",
            button: {
                selector: '#createOrder',
                disabled: 'disabled'
            },
            icon: null,
            fields: {
                CreateDate: {
                    validators: {
                        notEmpty: {
                            message: 'Không được để trống'
                        },
                        date: {
                            format: 'DD/MM/YYYY',
                            message: 'Ngày không phù hợp',
                            min: '@DateTime.Now.ToString("dd/MM/yyyy")'
                        }
                    }
                },
                StartTime: {
                    validators: {
                        notEmpty: {
                            message: 'Giờ bắt đầu không được trống'
                        },
                        regexp: {
                            regexp: TIME_PATTERN,
                            message: 'Giờ không đúng định dạng [HH:mm]'
                        },
                        callback: {
                            message: 'Giờ bắt đầu phải trước giờ kết thúc',
                            callback: function (value, validator, $field) {
                                var endTime = validator.getFieldElements('EndTime').val();
                                if (endTime === '' || !TIME_PATTERN.test(endTime)) {
                                    return true;
                                }
                                var startHour = parseInt(value.split(':')[0], 10),
                                    startMinutes = parseInt(value.split(':')[1], 10),
                                    endHour = parseInt(endTime.split(':')[0], 10),
                                    endMinutes = parseInt(endTime.split(':')[1], 10);

                                if (startHour < endHour || (startHour == endHour && startMinutes < endMinutes)) {
                                    // The end time is also valid
                                    // So, we need to update its status
                                    validator.updateStatus('EndTime', validator.STATUS_VALID, 'callback');
                                    return true;
                                }

                                return false;
                            }
                        }
                    }
                },
                EndTime: {
                    validators: {
                        notEmpty: {
                            message: 'Giờ kết thúc không được trống'
                        },
                        regexp: {
                            regexp: TIME_PATTERN,
                            message: 'Giờ không đúng định dạng [HH:mm]'
                        },
                        callback: {
                            message: 'Giờ kết thúc phải sau giờ bắt đầu',
                            callback: function (value, validator, $field) {
                                var startTime = validator.getFieldElements('StartTime').val();
                                if (startTime == '' || !TIME_PATTERN.test(startTime)) {
                                    return true;
                                }
                                var startHour = parseInt(startTime.split(':')[0], 10),
                                    startMinutes = parseInt(startTime.split(':')[1], 10),
                                    endHour = parseInt(value.split(':')[0], 10),
                                    endMinutes = parseInt(value.split(':')[1], 10);

                                if (endHour > startHour || (endHour == startHour && endMinutes > startMinutes)) {
                                    // The start time is also valid
                                    // So, we need to update its status
                                    validator.updateStatus('StartTime', validator.STATUS_VALID, 'callback');
                                    return true;
                                }

                                return false;
                            }
                        }
                    }
                }
            }
        });
    })();

    $("#startTime").on("change", function () {
        $('#orderForm').formValidation('revalidateField', 'StartTime');
    });

    $("#endTime").on("change", function () {
        $('#orderForm').formValidation('revalidateField', 'EndTime');
    });

    $("#playDate").on("change", function () {
        $('#orderForm').formValidation('revalidateField', 'CreateDate');
    });

    $('#playDate').datepicker({
        format: 'dd/mm/yyyy'
    });

        (function (document, window, $) {
            'use strict';
            var Site = window.Site;
            $(document).ready(function ($) {
                Site.run();
            });

        })(document, window, jQuery);
        $(document).ready(function ($) {
            $(".regular").slick({
                dots: true,
                infinite: true,
                slidesToShow: 3,
                slidesToScroll: 3
            });
            handleFullcalendar();

        });

        $('#checkCalendar').on('click', function () {
            $('#calendarForm').modal('show');
        });
        $('#checkPrice').on('click', function () {
            $('#priceForm').modal('show');
        });

        $('#calendarForm').on('shown.bs.modal', function () {
            handleFullcalendar();
        });

        function handleFullcalendar() {
            console.log("3");
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!
            var yyyy = today.getFullYear();

            if (dd < 10) {
                dd = '0' + dd
            }

            if (mm < 10) {
                mm = '0' + mm
            }

            today = yyyy + '/' + mm + '/' + dd;
            var my_options = {
                header: {
                    left: null,
                    center: 'prev,title,next',
                    right: ''
                },
                defaultDate: today,
                eventSources: [
        {
            url: "@Url.Action("GetOrderCalendar", new { id = Model.Id})",
            color: '#5940de',
            textColor: 'white'
        },
        {
            url: "@Url.Action("GetScheduleCalendar", new { id = Model.Id})",
            color: 'red',
            textColor: '#c43636'
        }
                ],
                lang: 'vi',
                defaultView: 'agendaWeek',
                allDaySlot: false
            };

            var _options;
            var my_options_mobile = $.extend({}, my_options);

            my_options_mobile.aspectRatio = 0.5;
            _options = $(window).outerWidth() < 667 ? my_options_mobile : my_options;

            $('#calendar').fullCalendar(_options);
            $('#calendar').fullCalendar('render');
        }

    </script>
}

